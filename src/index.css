@tailwind base;
@tailwind components;
@tailwind utilities;

/* Rubik's Cube Solver Design System */

@layer base {
  :root {
    /* Dark theme base */
    --background: 220 20% 8%;
    --foreground: 0 0% 98%;
    
    /* Cube colors - vibrant and accurate Rubik's cube colors */
    --cube-white: 0 0% 98%;
    --cube-yellow: 54 100% 62%;
    --cube-orange: 27 100% 55%;
    --cube-red: 0 100% 50%;
    --cube-green: 120 100% 35%;
    --cube-blue: 210 100% 50%;
    
    /* UI colors */
    --primary: 210 85% 55%;
    --primary-foreground: 0 0% 98%;
    --primary-glow: 210 85% 70%;
    
    --secondary: 220 15% 20%;
    --secondary-foreground: 0 0% 90%;
    
    --accent: 280 60% 50%;
    --accent-foreground: 0 0% 98%;
    
    --muted: 220 15% 15%;
    --muted-foreground: 0 0% 70%;
    
    --card: 220 15% 12%;
    --card-foreground: 0 0% 95%;
    
    --border: 220 15% 25%;
    --input: 220 15% 18%;
    --ring: 210 85% 55%;
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-glow)));
    --gradient-cube: linear-gradient(135deg, hsl(220 20% 12%), hsl(220 20% 18%));
    
    /* Shadows and effects */
    --shadow-glow: 0 0 40px hsl(var(--primary) / 0.3);
    --shadow-card: 0 4px 20px hsl(220 20% 4% / 0.5);
    
    --radius: 0.75rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-mono;
    background: radial-gradient(ellipse at top, hsl(220 20% 12%), hsl(220 20% 8%));
    min-height: 100vh;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: hsl(var(--muted));
  }
  
  ::-webkit-scrollbar-thumb {
    background: hsl(var(--primary));
    border-radius: 4px;
  }
}

/* Cube 3D Styles */
@layer components {
  .cube-container {
    perspective: 1000px;
    perspective-origin: center center;
  }
  
  .cube {
    transform-style: preserve-3d;
    transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .cube-face {
    position: absolute;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 2px;
    padding: 4px;
    background: hsl(220 15% 10%);
    border: 2px solid hsl(220 15% 20%);
  }
  
  .cube-sticker {
    aspect-ratio: 1;
    border-radius: 4px;
    border: 1px solid rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease;
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1);
  }
  
  .cube-sticker:hover {
    transform: scale(0.95);
  }
  
  /* Cube face positions */
  .face-front { transform: translateZ(150px); }
  .face-back { transform: rotateY(180deg) translateZ(150px); }
  .face-right { transform: rotateY(90deg) translateZ(150px); }
  .face-left { transform: rotateY(-90deg) translateZ(150px); }
  .face-top { transform: rotateX(90deg) translateZ(150px); }
  .face-bottom { transform: rotateX(-90deg) translateZ(150px); }
  
  /* Sticker colors - using both CSS variables and fallback colors */
  .sticker-white { 
    background: hsl(var(--cube-white)) !important; 
    background-color: #fafafa !important;
  }
  .sticker-yellow { 
    background: hsl(var(--cube-yellow)) !important; 
    background-color: #ffd700 !important;
  }
  .sticker-orange { 
    background: hsl(var(--cube-orange)) !important; 
    background-color: #ff8c00 !important;
  }
  .sticker-red { 
    background: hsl(var(--cube-red)) !important; 
    background-color: #ff0000 !important;
  }
  .sticker-green { 
    background: hsl(var(--cube-green)) !important; 
    background-color: #00aa00 !important;
  }
  .sticker-blue { 
    background: hsl(var(--cube-blue)) !important; 
    background-color: #0066ff !important;
  }
  
  /* Glass effect */
  .glass {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  /* Glow effects */
  .glow {
    box-shadow: var(--shadow-glow);
  }
  
  /* Animation utilities */
  .animate-rotate {
    animation: rotate 20s linear infinite;
  }
  
  @keyframes rotate {
    from { transform: rotateX(15deg) rotateY(0deg); }
    to { transform: rotateX(15deg) rotateY(360deg); }
  }
  
  .animate-pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite alternate;
  }
  
  @keyframes pulse-glow {
    from { box-shadow: 0 0 20px hsl(var(--primary) / 0.3); }
    to { box-shadow: 0 0 40px hsl(var(--primary) / 0.6); }
  }
}